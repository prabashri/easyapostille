---
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { HeadProps } from '@/types/HeadProps';

import { siteDefaults } from '@/config/siteDefaults';
import TermsContent from '@/content/pages/Terms.astro';
import { lastModifiedRaw } from '@/utils/last-modified';
import { machineAndHuman } from '@/utils/date-format';

// Page flags & copy
const cfg = siteDefaults.pages.terms ?? {
  title: 'Terms & Conditions',
  description: 'Read the legal terms.',
  enabled: true,
  index: true,
  sitemap: true,
  path: '/terms/',
};

// SSR redirect if disabled
if (!cfg.enabled) {
  return Astro.redirect('/', 307);
}

// Canonical path for this route
const PATH = cfg.path ?? '/terms/';

// Resolve last-modified (prefer generator key 'terms' â†’ fallback to publishedDate)
const rawLastMod = lastModifiedRaw(['terms'], siteDefaults.publishedDate);
const { iso: updatedAtISO, human: updatedAtHuman } = machineAndHuman(rawLastMod, 'now');

// SEO
const pageSeo: HeadProps = {
  title: cfg.title,
  description: cfg.description,
  image: '',
  type: 'terms',
  url: `${siteDefaults.siteUrl}${PATH}`,
  canonicalUrl: `${siteDefaults.siteUrl}${PATH}`,
  siteName: siteDefaults.siteName,
  authors: [],
  publishedAt: siteDefaults.publishedDate,
  updatedAt: updatedAtISO,
  index: cfg.index ?? true,
  keywords: [...siteDefaults.keywords, 'Terms of Service', 'Theme License', 'Refund Policy'],
  showBreadcrumb: false,
};
---

<BaseLayout headProps={pageSeo}>
  <Fragment slot="headContent-top" />
  <Fragment slot="headContent-bottom" />

  <TermsContent
    title={cfg.title}
    description={pageSeo.description}
    updatedAt={updatedAtHuman}
    updatedAtISO={updatedAtISO}
  />

  <Fragment slot="extraScripts" />
</BaseLayout>
