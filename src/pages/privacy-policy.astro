---
// src/pages/privacy-policy.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import type { HeadProps } from '../types/HeadProps';

import { siteDefaults } from '../config/siteDefaults';
// import modifiedDates from '@/data/modified-dates.json';

import { lastModifiedRaw } from '@/utils/last-modified';
import { toMachineDate, toHumanDate, machineAndHuman } from '@/utils/date-format';

import PrivacyPolicyContent from '@/content/pages/PrivacyPolicy.astro';

// Pull page copy from global defaults
const { title, description } = siteDefaults.pages.privacyPolicy;

// Last modified: try multiple keys; fall back to publishedDate
const rawLastMod = lastModifiedRaw(['privacy-policy'], siteDefaults.publishedDate);

// For SEO/meta (machine readable) + UI (human readable)
// const updatedAt   = toMachineDate(rawLastMod, 'now'); // e.g. "2025-09-12T01:23:45.000Z"
// const updatedAtHuman = toHumanDate(rawLastMod, 'now');   // e.g. "Sep 12, 2025" per site config

const { iso: updatedAtISO, human: updatedAtHuman } = machineAndHuman(rawLastMod, 'now');

// Pull "index" entry from modified-dates or fall back to publishedDate
// const updatedAt =  modifiedDates['index'] ? new Date(modifiedDates['index']).toISOString(): siteDefaults.publishedDate;

// Last modified (fallback -> publishedDate)


// SEO
const pageSeo: HeadProps = {
  title,
  description,
  image: '',
  type: 'privacy',
  url: `${siteDefaults.siteUrl}/privacy-policy/`,
  canonicalUrl: `${siteDefaults.siteUrl}/privacy-policy/`,
  siteName: siteDefaults.siteName,
  authors: [],
  publishedAt: siteDefaults.publishedDate,
  updatedAt: updatedAtISO,
  index: true,
  keywords: [...siteDefaults.keywords, 'Privacy Policy'],
  showBreadcrumb: false,
};
---

<BaseLayout headProps={pageSeo}>
  <Fragment slot="headContent-top" />
  <Fragment slot="headContent-bottom" />
    <PrivacyPolicyContent title={title} description={description} updatedAt={updatedAtHuman} />
  <Fragment slot="extraScripts" />
</BaseLayout>
