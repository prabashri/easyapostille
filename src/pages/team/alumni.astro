---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { siteDefaults } from '../../config/siteDefaults';
import { Icon } from 'astro-icon/components';
import gravatarHashesJson from '../../data/email-hash.json';

const gravatarHashes: Record<string, string> = Object.fromEntries(
  Object.entries(gravatarHashesJson).map(([slug, obj]) => [slug, obj.sha256])
);

const alumni = (await getCollection('team'))
  .filter(member => member.data.left)
  .sort((a, b) => {
    const aDate = a.data.left ? new Date(a.data.left).valueOf() : 0;
    const bDate = b.data.left ? new Date(b.data.left).valueOf() : 0;
    if (bDate !== aDate) return bDate - aDate;
    return (a.data.role || '').localeCompare(b.data.role || '') || (a.data.name || '').localeCompare(b.data.name || '');
  });

const headProps = {
  title: 'Our Alumni',
  description: 'A tribute to former team members who shaped our journey.',
  url: `${siteDefaults.siteUrl}/team/alumni/`,
  image: siteDefaults.image,
  index: true,
  authorName: siteDefaults.authorName,
  authorUrl: siteDefaults.authorUrl,
  publishedAt: siteDefaults.publishedDate,
};
---

<BaseLayout headProps={headProps}>
  <style>
    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      list-style: none;
      padding: 0;
      margin: 0;
      justify-content: center;
    }
    li {
      width: calc(50% - 1rem);
      text-align: center;
    }
    .avatar {
      width: 150px;
      height: 150px;
      border-radius: 50%;
      margin: 0 auto 1rem;
      object-fit: cover;
    }
    .initial-box {
      width: 150px;
      height: 150px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      font-weight: bold;
      color: white;
      margin-bottom: 1rem;
    }
    h2 {
      margin: 0.25rem 0 0.5rem;
      font-size: 1.25rem;
    }
    .role {
      font-style: italic;
      color: var(--gray-text, #666);
      margin-bottom: 0.25rem;
    }
    .expertise {
      font-size: 0.875rem;
      color: var(--accent-text, #888);
    }
    @media (max-width: 768px) {
      li {
        width: 100%;
      }
    }
  </style>

  <header class="mx-w-site mi-auto ta-center mb-2">
    <h1>{headProps.title}</h1>
    <p>{headProps.description}</p>
    <p class="mb-2" style="font-style: italic; max-width: 40rem; margin: 0 auto;">
      We thank you sincerely for your valuable contributions to our success.
    </p>
  </header>

  <ul>
    {alumni.map(member => {
      const {
        slug,
        name,
        role,
        expertise,
        color,
        useImage,
        image,
        useInitial,
        initialText,
        useGravatar,
        gravatarEmail
      } = member.data;

      const avatarHtml = (() => {
        if (useImage && image) {
          return <img src={image} alt={`Photo of ${name}`} class="avatar" loading="lazy" />;
        }

        if (useInitial && initialText) {
          return <div class="initial-box" style={`background:${color || '#888'}`}>{initialText}</div>;
        }

        if (useGravatar && gravatarEmail && gravatarHashes[slug]) {
          return (
            <img
              src={`https://www.gravatar.com/avatar/${gravatarHashes[slug]}?s=300&d=identicon`}
              alt={`Gravatar of ${name}`}
              class="avatar"
              loading="lazy"
            />
          );
        }

        return <Icon name="avatar" width="150" height="150" style={`fill:${color || '#ccc'}; margin-bottom:1rem;`} />;
      })();

      return (
        <li>
          <a href={`/team/${slug}/`}>
            {avatarHtml}
            <h2>{name}</h2>
            <p class="role">{role}</p>
            <p class="expertise">{expertise?.join(', ')}</p>
          </a>
        </li>
      );
    })}
  </ul>
</BaseLayout>
