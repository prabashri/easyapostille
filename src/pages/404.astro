---
// src/pages/404.astro
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { HeadProps } from '@/types/HeadProps';

import { siteDefaults } from '@/config/siteDefaults';
import NotFoundContent from '@/content/pages/NotFound.astro';

type NotFoundConfig = {
  title: string;
  description: string;
  enabled: boolean;
  index: boolean;
  sitemap: boolean;
  path: string;
};

const notFoundRaw = siteDefaults.pages.notFound;
const cfg: NotFoundConfig = notFoundRaw && typeof notFoundRaw.enabled === "boolean"
  ? {
      title: notFoundRaw.title ?? 'Page Not Found',
      description: notFoundRaw.description ?? 'The page you\'re looking for could not be found.',
      enabled: Boolean(notFoundRaw.enabled),
      index: typeof notFoundRaw.index === "boolean" ? notFoundRaw.index : false,
      sitemap: typeof notFoundRaw.sitemap === "boolean" ? notFoundRaw.sitemap : false,
      path: notFoundRaw.path ?? '/404/'
    }
  : {
  title: 'Page Not Found',
  description: 'The page youâ€™re looking for could not be found.',
  enabled: true,
  index: false,
  sitemap: false,
  path: '/404/'
};

// âœ… SSR redirect if this page is disabled in config
if (cfg.enabled === false) {
  // 307 preserves method; adjust to 302 if you prefer
  return Astro.redirect('/', 307);
}

// NOTE: Astro serves this file as /404/. Keep the filename as 404.astro.
// We still use cfg.path for canonical URL and nav consistency.
const PATH = cfg.path ?? '/404/';

const pageSeo: HeadProps = {
  title: cfg.title,
  description: cfg.description,
  image: '',
  type: 'website',
  url: `${siteDefaults.siteUrl}${PATH}`,
  canonicalUrl: `${siteDefaults.siteUrl}${PATH}`,
  siteName: siteDefaults.siteName,
  authors: [],
  index: false, // ðŸ”’ 404 must never be indexed
};
---

<BaseLayout headProps={pageSeo}>
  <Fragment slot="headContent-top" />
  <Fragment slot="headContent-bottom" />

  <NotFoundContent title={pageSeo.title} description={pageSeo.description} />

  <Fragment slot="extraScripts" />
</BaseLayout>
