---
// src/layouts/ServiceLayout.astro
/**
 * Layout for "Service" pages (schema: Service)
 * css: src/styles/pages/post-layout.css (re-use for now)
 */

import BaseLayout from './BaseLayout.astro';
import { siteDefaults } from '@/config/siteDefaults';
import { siteImages } from '@/config/siteImages';
import type { HeadProps } from '@/types/HeadProps';
import { getEntry } from 'astro:content';
import TableOfContents from '@/components/TableOfContents.astro';
import ResponsiveImage from '@/components/ResponsiveImage.astro';
import Breadcrumb from '@/components/ui/Breadcrumb.astro';
import RelatedPostsList from '@/components/ui/RelatedPostsList.astro';

import ShareLink from '@/components/ShareLink.astro';
import FaqList from '@/components/ui/FaqList.astro';
import TagList from '@/components/ui/TagList.astro';
import PrevNextNav from '@/components/ui/PrevNextNav.astro';
import Sidebar from '@/components/ui/Sidebar.astro';
import CssFilesToLoad from '@/components/CssFilesToLoad.astro';

import { getImage, constructUrl, getImageMeta } from '@/utils/getImage';
import { parseImageDims } from '@/utils/imageHelpers';
import { machineAndHuman } from '@/utils/date-format';

interface Offer {
  name?: string;
  priceKey: string;
  buyNowLink?: string;
}
interface Props {
  title?: string;
  description?: string;
  slug?: string;
  canonicalUrl?: string;
  index?: boolean;
  type?: string; // kept for compatibility but forced to 'service' below
  publishedDate?: string;
  lastModified?: string | null;
  authors?: { id: string }[];
  tags?: string[];
  categories?: string[];
  keywords?: string[];
  featured?: boolean;
  draft?: boolean;
  faq?: { question: string; answer: string; speakable: boolean }[];
  collection?: string;
  collectionBase?: string;
  heroImage?: string;
  heroImageAlt?: string;
  heroImageTitle?: string;
  heroImageCaption?: string;
  toc?: { id: string; text: string; level: number }[];
  allPosts?: any[];
  relatedPosts?: { title: string; url: string }[];
  serviceOffers?: Offer[];                    // ⬅️ important
}

const {
  title,
  description,
  slug,
  canonicalUrl,
  index = true,
  featured = false,
  type = 'service',                           // ⬅️ force service
  publishedDate,
  lastModified,
  authors = [],
  tags = [],
  categories = [],
  keywords = [],
  collection = '',
  collectionBase = '',
  heroImage,
  heroImageAlt,
  heroImageTitle,
  heroImageCaption,
  faq = [],
  toc = [],
  allPosts = [],
  relatedPosts = [],
  serviceOffers = [],                         // ⬅️ default []
} = Astro.props as Props;

// Canonical
const fullCanonical =
  canonicalUrl || `${siteDefaults.siteUrl}${collectionBase ?? ''}${slug ?? ''}/`;

// Prev/next
const currentIndex = allPosts.findIndex((p) => (p.data?.slug || p.id) === slug);
const prevItem = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextItem =
  currentIndex >= 0 && currentIndex < allPosts.length - 1
    ? allPosts[currentIndex + 1]
    : null;

// Authors (resolve)
const resolvedAuthors = await Promise.all(
  authors.map(async ({ id }) => {
    try {
      const entry = await getEntry('team', id);
      return entry ? {
        id,
        slug: entry.data.slug,
        url: `/team/${entry.data.slug}/`,
        name: entry.data.name ?? id,
        data: entry.data
      } : null;
    } catch { return null; }
  })
).then(xs => xs.filter(Boolean));

// Hero image
const imageSrc = heroImage ?? siteImages.image;
const heroImageMeta = getImageMeta(imageSrc);
const heroImageUrlRaw =
  heroImageMeta && typeof heroImageMeta === 'object'
    ? constructUrl(heroImageMeta, 'full')
    : '';
const heroImageUrl = Array.isArray(heroImageUrlRaw) ? heroImageUrlRaw[0] : heroImageUrlRaw;
const imageInfo = typeof heroImageUrl === 'string' ? parseImageDims(heroImageUrl) : undefined;

// Dates for head
const { iso: publishedAtISO, human: publishedAtHuman } = machineAndHuman(publishedDate, 'now');
const { iso: lastModifiedISO, human: lastModifiedHuman } = machineAndHuman(lastModified ?? publishedDate, 'now');

// Head props — NOTE: we include serviceOffers here
const headProps: HeadProps = {
  title: `${title}`,
  description,
  image: heroImageUrl,
  imageWidth: imageInfo?.width,
  imageHeight: imageInfo?.height,
  imageAlt: heroImageAlt || (title ? `hero image of ${title}` : '') || siteImages.imageAlt || 'Site featured image',
  type: 'service',                             // ⬅️ force service
  canonicalUrl: fullCanonical,
  index,
  keywords: tags?.length ? tags : keywords,
  publishedAt: publishedAtHuman,
  publishedAtISO,
  updatedAt: lastModifiedHuman,
  updatedAtISO: lastModifiedISO,
  authors: resolvedAuthors as any,
  showBreadcrumb: true,
  breadcrumbs: [],
  serviceOffers,                               // ⬅️ PASSED TO HEAD
};
---

<BaseLayout headProps={headProps}>
  <Fragment slot="headContent-top">
    <CssFilesToLoad files={[{ name: "post-layout", inline: true }]} />
  </Fragment>

  <Fragment slot="headContent-bottom">
    <meta name="heroimage" content={heroImageUrl || ''} />
    {prevItem && (
      <link rel="prev" href={`/${collectionBase}${prevItem.data?.slug || prevItem.id}/`} />
    )}
    {nextItem && (
      <link rel="next" href={`/${collectionBase}${nextItem.data?.slug || nextItem.id}/`} />
    )}
  </Fragment>

  <article id="post-layout" class="post-layout w-full gap jc-center"
    itemscope itemtype="https://schema.org/Service">   {/* ⬅️ Service schema */}
    {/* Header */}
    <header class="post-header bg-primary-darker col-base-00 mn-h-230 mx-h-320 h-fit py-2">
      <Breadcrumb showBreadcrumb={headProps.showBreadcrumb} title={title} breadcrumbs={headProps.breadcrumbs} />
      <div id="post-header-content" class="mx-w-featured mi-auto ta-center my-2 p-1">
        <h1 class="post-title">{title}</h1>
        {description && <p class="post-desc">{description}</p>}
      </div>
    </header>

    {/* Optional hero */}
    {heroImage && heroImageMeta && typeof heroImageMeta === 'object' ? (
      <ResponsiveImage
        src={heroImage}
        imageMeta={heroImageMeta}
        alt={heroImageAlt || ''}
        title={heroImageTitle || ''}
        caption={heroImageCaption || ''}
        width="960"
        id="hero-image"
        loading="eager"
        className="hero-image mx-w-95-0 w-90-0 lg-mx-w-featured lg-w-full full-mx-w-featured full-w-full mi-auto mt-0-5"
        variant="desktop"
        addSchema={true}
      />
    ) : heroImage ? (
      <ResponsiveImage
        src={heroImage}
        alt={heroImageAlt || ''}
        title={heroImageTitle || ''}
        caption={heroImageCaption || ''}
        width="960"
        id="hero-image"
        loading="eager"
        className="hero-image mx-w-95-0 w-90-0 lg-mx-w-featured lg-w-full full-mx-w-featured full-w-full mi-auto mt-0-5"
        variant="desktop"
        addSchema={true}
      />
    ) : null}

    {/* Left Sidebar (ToC) */}
    <Sidebar variant="left">
      <TableOfContents toc={toc} heading="On This Page" depth="h2,h3" className="toc bg br" />
    </Sidebar>

    {/* Main content */}
    <div class="post-content mx-w-content mi-auto my-05 p-1 bg border-primary-light br" itemprop="description">
      <slot />
    </div>

    {/* Simple Offers block (optional visual) */}
    {Array.isArray(serviceOffers) && serviceOffers.length > 0 && (
      <section class="service-offers mx-w-content mi-auto my-1 p-1 br border-primary-light">
        <h2 class="mb-05">Service Packages</h2>
        <ul>
          {serviceOffers.map((o) => (
            <li class="my-03">
              <strong>{o.name ?? o.priceKey}</strong>
              {o.buyNowLink && (
                <>
                  {' '}— <a class="td-underline" href={o.buyNowLink}>Buy Now</a>
                </>
              )}
              <div class="text-s col-base-70">pricing key: {o.priceKey}</div>
            </li>
          ))}
        </ul>
      </section>
    )}

    {/* Right Sidebar */}
    <Sidebar variant="right">
      <RelatedPostsList items={relatedPosts} />
    </Sidebar>

    <footer id="post-footer" class="post-footer mx-w-content w-full mi-auto my-05 p-05">
      <ShareLink id="blog-footer-share-links" className="" title="share" />

      {Array.isArray(faq) && faq.length > 0 && (
        <FaqList
          items={faq}
          id="faq"
          class="post-faq my-05 p-05"
          heading="Frequently Asked Questions"
          headingTag="h2"
          openAll={true}
          addSchema={true}
          addSpeakableSchema={true}
          htmlAnswers={false}
        />
      )}

      {Array.isArray(tags) && tags.length > 0 && (
        <TagList items={tags} heading="Keywords" baseHref="/tags/" dedupe={true} sort="asc" />
      )}
    </footer>
  </article>

  {(prevItem || nextItem) && (
    <PrevNextNav
      prevItem={prevItem}
      nextItem={nextItem}
      collectionBase={collectionBase}
      prevVariant="secondary"
      nextVariant="secondary"
    />
  )}

  <Fragment slot="extraScripts" />
</BaseLayout>
