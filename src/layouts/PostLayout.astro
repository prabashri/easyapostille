---
// layouts/PostLayout.astro

import BaseLayout from './BaseLayout.astro';
import { siteDefaults } from '../config/siteDefaults';
import type { HeadProps } from '../types/HeadProps';
import { Image } from 'astro:assets';


interface Props {
  title?: string;
  description?: string;
  slug?: string;
  canonicalUrl?: string;
  index?: boolean;
  publishedDate?: string;  
  lastModified?: string | null;
  author?: string
  authorName?: string;
  authorUrl?: string;
  tags?: string[];
  category?: string;
  keywords?: string[];
  featured?: boolean;
  draft?: boolean;
  faq?: { question: string; answer: string; speakable: boolean }[];
  collection?: string;
  collectionBase?: string;
  heroImage?: string;
  heroImageAlt?: string;
  heroImageTitle?: string;
  heroImageCaption?: string;
  toc?: { id: string; text: string; level: number }[];
  allPosts?: any[];
}

const {
  title,
  description,
  slug,
  canonicalUrl,
  index = true,
  featured = false,
  publishedDate,
  lastModified,
  author,
  authorName,
  authorUrl,
  tags = [],
  category,
  keywords = [],
  collection = '',  
  collectionBase = '',
  heroImage,
  heroImageAlt,
  heroImageTitle,
  heroImageCaption,
  faq = [],
  toc = [],
  allPosts = []
} = Astro.props as Props;

const fullCanonical = canonicalUrl || `${siteDefaults.siteUrl}${collectionBase}${slug}/`;

const currentIndex = allPosts.findIndex(post => (post.data?.slug || post.slug) === slug);
const prevPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;

const headProps: HeadProps = {
  title: `${title} | ${siteDefaults.siteName}`,
  description,
  image: heroImage || siteDefaults.image,
  canonicalUrl: fullCanonical,
  index,
  keywords: tags,
  publishedAt: publishedDate,
  updatedAt: lastModified ?? undefined,
  authorName: authorName || siteDefaults.authorName,
  authorUrl: authorUrl || siteDefaults.authorUrl,
};

---
<BaseLayout headProps={headProps}>
  <Fragment slot="headContent-top" />
  <Fragment slot="headContent-bottom" />

  <article class="post-layout">
    <div class="hero-image">      
      {heroImage && (
        <figure>
          <img
            src={heroImage}
            alt={heroImageAlt ?? ''}
            width="1020"
            height="510"
            loading="lazy"
          />
          {heroImageCaption && <figcaption>{heroImageCaption}</figcaption>}
        </figure>
      )}
    </div>

    <header class="post-header">
      <h1 class="post-title">{title}</h1>
      {description && <p class="post-desc">{description}</p>}
      <div class="post-meta">
        {authorName && <span>‚úçÔ∏è {authorName}</span>}
        {author && <span>Author: {author}</span>}
        {publishedDate && (
          <time datetime={publishedDate}> üìÖ {new Date(publishedDate).toLocaleDateString()}</time>
        )}
        {lastModified && (
          <span> üîÑ Updated: {new Date(lastModified).toLocaleDateString()}</span>
        )}
        {lastModified && (
          <span> | üïí Last Modified: <time datetime={lastModified}>
            {new Date(lastModified).toLocaleDateString()}
          </time></span>
        )}
      </div>
    </header>

    {toc.length > 0 && (
      <aside class="post-toc">
        <h2>Contents</h2>
        <ul>
          {toc.map((item) => (
            <li><a href={`#${item.id}`}>{item.text}</a></li>
          ))}
        </ul>
      </aside>
    )}

    <div class="post-content">
      <slot />
    </div>

    {tags.length > 0 && (
      <footer class="post-tags">
        <h3>Tags</h3>
        <ul>
          {tags.map((tag) => (
            <li><a href={`/tags/${tag}/`}>{tag}</a></li>
          ))}
        </ul>
      </footer>
    )}

    {(prevPost || nextPost) && (
      <nav class="post-navigation mt-2">
        <ul class="flex wrap gap-2 jc-space-between no-list-style-type no-margin">
          <li class="w-50-1">
            {prevPost && (
              <a href={`/${collection}${prevPost.data?.slug || prevPost.slug}/`} class="prev-post">
                ‚Üê {prevPost.data?.title}
              </a>
            )}
          </li>
          <li class="w-50-1 ta-right">
            {nextPost && (
              <a href={`/${collection}${nextPost.data?.slug || nextPost.slug}/`} class="next-post">
                {nextPost.data?.title} ‚Üí
              </a>
            )}
          </li>
        </ul>
      </nav>
    )}
  </article>

  <Fragment slot="extraScripts" />
</BaseLayout>
