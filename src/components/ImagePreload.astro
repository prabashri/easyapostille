---
// src/components/ImagePreload.astro
import { getPreloadImages, clearPreloadImages } from '@/utils/preloadRegistry';

interface PreloadItem {
  src: string;
  media?: string;
  fetchPriority?: 'high' | 'low' | 'auto';
}

const preloadImagesAuto = getPreloadImages();
clearPreloadImages();


const uniqueImages = Array.from(
  new Map(preloadImagesAuto.map(i => [`${i.src}|${i.media ?? ''}|${i.fetchPriority ?? 'auto'}`, i])).values()
);

const item = uniqueImages.length > 0
  ? uniqueImages.map(i => i.src).join(', ')
  : '';

function getDelayImageAttr(src: string, fetchPriority?: string) {
  if (fetchPriority === 'low') {
    const fileName = src.split('/').pop()?.split('.')[0] ?? 'image';
    return { 'delay-image': fileName };
  }
  return {};
}

const isDev = import.meta.env.DEV;
---

{/** ðŸ”¹ Preload images */ }
{uniqueImages.map(({ src, media, fetchPriority }) => (
  <link
    rel="preload"
    as="image"
    href={src}
    fetchpriority={fetchPriority ?? 'auto'}
    {...(media ? { media } : {})}
    {...getDelayImageAttr(src, fetchPriority)}
  />
))}

{isDev && (
  <meta name="preload-images" content={item.replace(/"/g, '&quot;')} />
)}
