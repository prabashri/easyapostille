---
// src/components/TableOfContents.astro
// <TableOfContents toc={toc} heading="On This Page" depth = 'h2,h3' />
import { Icon } from 'astro-icon/components';
export interface TOCItem {
  id: string;
  text: string;
  level?: number;
}

export interface Props {
  toc: TOCItem[];
  heading?: string;
  depth?: 'h2' | 'h2,h3';
  className?: string;
}


const props = Astro.props;

const {
  toc = [],
  heading = 'On this Page',
  depth = 'h2,h3'
} = props;

const allowedLevels = depth === 'h2' ? [2] : [2, 3];
---

{toc.length > 0 && (    
    <details id="toc-details" class={`toc-details ${props.className} block lg:[open]`} open>
      <summary class="toc-header pointer my-05 flex jc-space-between ai-center bold no-bullets py-05">
        <h2 class="text-base bold no-margin">{heading}</h2>      
        <Icon name="down-arrow-2" width="20" height="20" class="arrow-icon" />      
      </summary>
      <nav id="toc-nav" class="toc-nav text-s p-02 overflow-y-auto max-h-80vh">
          <ul id="toc-list" class="toc-list text-s no-bullets">
              {props.toc
                  .filter(item => item.level !== undefined && allowedLevels.includes(item.level))
                  .map(item => (
                  <li class={item.level === 3 ? 'ml-4' : 'ml-0'}>
                      <a class="block no-bb px-05 py-02" href={`#${item.id}`}>{item.text}</a>
                  </li>
              ))}
          </ul>
      </nav>
    </details>    
)}