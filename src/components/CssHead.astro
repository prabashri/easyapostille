---
import manifest from '../data/assets-manifest.json';
import { inlineCss } from '../data/generated-inline-css.js';
console.log('✅ imported inline css:', inlineCss);

const isDev = import.meta.env.DEV;

let inlineCssFiles: string[] = [];
let preloadCssFiles: string[] = [];
let nonCriticalCssFiles: string[] = [];

if (isDev) {
  const inlineModules = import.meta.glob('../styles/inline/*.css', { eager: true });
  const preloadModules = import.meta.glob('../styles/preload/*.css', { eager: true });
  const nonCriticalModules = import.meta.glob('../styles/non-critical/*.css', { eager: true });

  inlineCssFiles = Object.keys(inlineModules) as string[];
  preloadCssFiles = Object.keys(preloadModules) as string[];
// Removed invalid import statement; not needed here
  nonCriticalCssFiles = Object.keys(nonCriticalModules) as string[];
} else {
  preloadCssFiles = [manifest.css.main.file];            // e.g. /styles/main.abc123.min.css
  nonCriticalCssFiles = [manifest.css.nonCritical.file]; // e.g. /styles/non-critical.xyz456.min.css
}

---
{/* -- ✅ Preload fonts --*/}
<link rel="preload" href="/fonts/Inter-Regular-Subset.woff2" as="font" fetchpriority="high" type="font/woff2" crossorigin>
<link rel="preload" href="/fonts/Inter-Bold-Subset.woff2" as="font" fetchpriority="high" type="font/woff2" crossorigin>


{/* -- ✅ Inline critical CSS --*/}

{/* -- ✅ PROD: Inline critical CSS -- */}
{!isDev && inlineCss && <style is:inline>{inlineCss}</style>}

{/* -- ✅ PROD: Preload + load main CSS -- */}
{!isDev && preloadCssFiles[0] && (
  <>
    <link rel="preload" as="style" href={preloadCssFiles[0]} data-swap="true" />
    <link rel="stylesheet" href={preloadCssFiles[0]} fetchpriority="high" />
  </>
)}

{/* -- ✅ PROD: Load non-critical CSS with media="print" + data-swap -- */}
{!isDev && nonCriticalCssFiles[0] && (
  <link rel="stylesheet" href={nonCriticalCssFiles[0]} media="print" data-swap="true" />
)}
