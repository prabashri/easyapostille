---
import manifest from '../data/assets-manifest.json';
import { inlineCss } from '../data/generated-inline-css.ts';

const devCssOrder = [
  '/src/styles-css/inline/base.css',
  '/src/styles-css/inline/color.css',
  '/src/styles-css/inline/header.css',
  '/src/styles-css/preload/components.css',
  '/src/styles-css/preload/form.css',
  '/src/styles-css/preload/utilities.css',
  '/src/styles-css/non-critical/non-critical.css'
];



const isDev = import.meta.env.DEV;
let cssFiles: string[] = [];

let preloadCssFiles: string[] = [];
let nonCriticalCssFiles: string[] = [];

preloadCssFiles = [manifest.css.main.file];            // e.g. /styles/main.abc123.min.css
  nonCriticalCssFiles = [manifest.css.nonCritical.file]; // e.g. /styles/non-critical.xyz456.min.css
---
{/* -- ✅ Preload fonts --*/}
<link rel="preload" href="/fonts/Inter-Regular-Subset.woff2" as="font" fetchpriority="high" type="font/woff2" crossorigin>
<link rel="preload" href="/fonts/Inter-Bold-Subset.woff2" as="font" fetchpriority="high" type="font/woff2" crossorigin>
{ preloadCssFiles[0] && (
  <>
    <link rel="preload" as="style" href={preloadCssFiles[0]} />
  </>
)}

{/* -- ✅ PROD: Inline critical CSS -- */}
{  inlineCss && <style id="inline-css" set:html={inlineCss} />}

{/* -- ✅ PROD: Preload + load main CSS -- */}
{  preloadCssFiles[0] && (
  <>
    <link rel="stylesheet" href={preloadCssFiles[0]} fetchpriority="high" />
  </>
)}

{/* -- ✅ PROD: Load non-critical CSS with media="print" + data-swap -- */}
{ nonCriticalCssFiles[0] && (
  <link rel="stylesheet" data-href={nonCriticalCssFiles[0]} data-swap="true" />
)}

{isDev && devCssOrder.map(href => (
  <link rel="stylesheet" href={`${href}?t=${import.meta.hot?.data?.timestamp ?? Date.now()}`} />
))}
